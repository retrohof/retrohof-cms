@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.Localization
@using Retrohof.Features
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Volo.Abp.AspNetCore.Mvc.UI.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Bundling
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.ContentTitle
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Footer
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.MainNavbar
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Maintenance
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.PageAlerts
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Slider
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Suppliers
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Topbar
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.Localization
@using Volo.Abp.MultiTenancy
@using Volo.Abp.Ui.Branding
@using Volo.Abp.Ui.LayoutHooks

@inject ICanvasThemeBrandingProvider Branding
@inject ICurrentTenant CurrentTenant
@inject IPageLayout PageLayout
@inject IHtmlLocalizer<South25Resource> L
@inject IHttpContextAccessor httpContext;
@inject IViewComponentsFeatureProvider<ViewComponent> Features

@{
    Layout = null;

    var pageTitle = L["Index|Meta|Title"].Value;

    var description = L["Index|Meta|Description"].Value;
    var routeValue = @httpContext?.HttpContext?.Request.RouteValues.First().Value;

    const string IndexRoute = "/Index";
}

<!DOCTYPE html>

<html lang="@CultureInfo.CurrentCulture.Name">
<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Application)

    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="description" content="@description">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <abp-style-bundle name="Canvas.Global" />

    <!-- Font Imports -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=PT+Serif:ital@0;1&display=swap" rel="stylesheet">

    <title>@pageTitle South25/Application</title>

    @await RenderSectionAsync("styles", false)

</head>

<body class="abp-application-layout stretched">

    <!-- Document Wrapper
    ============================================= -->
    <div id="wrapper">


        <!-- Header
        ============================================= -->
        @if (!await Features.DisplayViewComponent<MaintenanceViewComponent>())
        {
            @if (await Features.DisplayViewComponent<TopNavbarToolbarViewComponent>())
                @(await Component.InvokeAsync<TopNavbarToolbarViewComponent>())


        }

        @if (await Features.DisplayViewComponent<MainNavbarViewComponent>())
            @(await Component.InvokeAsync<MainNavbarViewComponent>())




        @if (!await Features.DisplayViewComponent<MaintenanceViewComponent>())
        {
            <!-- Slider
            ============================================= -->
            @if (await Features.DisplayViewComponent<SliderViewComponent>())
            {
                @if (routeValue!.Equals(IndexRoute))
                {
                    @(await Component.InvokeAsync<SliderViewComponent>())
                }
            }
        }

        @await RenderSectionAsync("content_toolbar", false)


        <!-- Content
        ============================================= -->
        @RenderBody()<!-- #content end -->

        @if (!await Features.DisplayViewComponent<MaintenanceViewComponent>())
        {
            <!-- Suppliers
            ============================================= -->
            @if (await Features.DisplayViewComponent<SuppliersViewComponent>())
                @(await Component.InvokeAsync<SuppliersViewComponent>())





            <!-- Footer
            ============================================= -->
            @if (await Features.DisplayViewComponent<FooterViewComponent>())
                @(await Component.InvokeAsync<FooterViewComponent>())


        }

    </div><!-- #wrapper end -->

    <!-- Go To Top
    ============================================= -->
    <div id="gotoTop" class="fas fa-angle-up"></div>

    <!-- JavaScripts
    ============================================= -->
    <abp-script-bundle name="Canvas.Global" />

    <script src="~/Abp/ApplicationLocalizationScript?cultureName=@CultureInfo.CurrentUICulture.Name"></script>
    <script src="~/Abp/ApplicationConfigurationScript"></script>
    <script src="~/Abp/ServiceProxyScript"></script>

    @await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

    @await RenderSectionAsync("scripts", false)

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Application)

</body>
</html>
